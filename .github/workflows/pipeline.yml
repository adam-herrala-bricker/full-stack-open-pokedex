name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master] #can also do lists this way
    types: [opened, synchronize] #PR events that trigger the workflow

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04 #should match whatever it runs on in production
    steps:
      #uses --> runs a specific action (a reusable piece of code)
      - uses: actions/checkout@v3 #"checksout" the source code from Git (setting v3 so doesn't break on update)
      - uses: actions/setup-node@v3
        with:
          node-version: '14.17' #again, same v as production environment
      - name: Install dependencies #technically, job names are optional
        run: npm install #starting to look familiar
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: JesTests
        run: npm test
      - name: E2E tests
        uses: cypress-io/github-action@v5 #note: this may be overkill, since it installs all the deps again?
        with: 
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000
      - name: Deploy to production
        if: ${{ github.event_name == 'push'}} #only deploy on push to main, not opening a PR
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK }} #hook stored in GitHub repository secrets
  
  tag_release:
    needs: [simple_deployment_pipeline] #doesn't run unless simple_deployment_pipeline is successful
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3 #YOU NEED THIS AND IT'S LEFT OUT IN THE FULLSTACK INSTRUCTIONS
        with: 
          fetch-depth: '0'
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push'}} #also only bump version on push to main
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
  
  a_test_job: ##it's just valuable to know where this stuff is, so going to keep it here for future ref
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
      - name: contains skip
        if: ${{ github.event.commits.message.includes("#skip") }}
        run: echo "it worked!"
